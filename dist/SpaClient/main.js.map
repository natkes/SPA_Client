{"version":3,"sources":["./src/app/components/artists-page/artists-page.component.ts","./src/app/components/artists-page/artists-page.component.html","./src/app/components/playlists-page/playlists-page.component.ts","./src/app/components/playlists-page/playlists-page.component.html","./src/app/components/login-button/login-button.component.ts","./src/app/components/login-button/login-button.component.html","./src/environments/environment.ts","./src/app/components/add-artist-page/add-artist-page.component.ts","./src/app/components/add-artist-page/add-artist-page.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-song-page/add-song-page.component.ts","./src/app/components/add-song-page/add-song-page.component.html","./src/app/components/home-page/home-page.component.ts","./src/app/components/home-page/home-page.component.html","./src/app/components/single-artist-page/single-artist-page.component.ts","./src/app/components/single-artist-page/single-artist-page.component.html","./src/app/components/logout-button/logout-button.component.ts","./src/app/components/logout-button/logout-button.component.html","./src/app/components/navigation/navigation.component.ts","./src/app/components/navigation/navigation.component.html","./src/app/components/update-playlist/update-playlist.component.ts","./src/app/components/update-playlist/update-playlist.component.html","./src/app/components/single-playlist-page/single-playlist-page.component.ts","./src/app/components/single-playlist-page/single-playlist-page.component.html","./src/app/components/add-playlist/add-playlist.component.ts","./src/app/components/add-playlist/add-playlist.component.html","./src/app/app-routing.module.ts","./src/app/components/songs-page/songs-page.component.ts","./src/app/components/songs-page/songs-page.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {AuthService} from '@auth0/auth0-angular';\n\n@Component({\n  selector: 'app-artists-page',\n  templateUrl: './artists-page.component.html',\n  styleUrls: ['./artists-page.component.css']\n})\nexport class ArtistsPageComponent implements OnInit {\n\n  baseUrl = 'https://spa586db.azurewebsites.net/';\n  public artistsSongs: ArtistsSongs[];\n\n  constructor(http: HttpClient, public auth: AuthService) {\n    http.get<ArtistsSongs[]>(this.baseUrl + 'api/artists').subscribe(result => {\n      this.artistsSongs = result;\n    }, error => console.error(error));\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\ninterface ArtistsSongs {\n  id: number;\n  name: string;\n}\n\n","<div *ngIf=\"(auth.isAuthenticated$ | async)===true\">\n  <button type=\"button\" class=\"btn btn-dark\" routerLink=\"/addArtist\">Add Artist</button>\n  <br/>\n  <div class=\"card\" style=\"width: 18rem;\" *ngFor=\"let artist of artistsSongs\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{{artist.name}}</h5>\n      <p></p>\n      <a routerLink=\"/artists/{{artist.id}}\" class=\"btn btn-primary\">{{artist.name}}'s Page</a>\n    </div>\n  </div>\n</div>\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {AuthService} from '@auth0/auth0-angular';\n\n@Component({\n  selector: 'app-playlists-page',\n  templateUrl: './playlists-page.component.html',\n  styleUrls: ['./playlists-page.component.css']\n})\nexport class PlaylistsPageComponent implements OnInit {\n\n  baseUrl = 'https://spa586db.azurewebsites.net/';\n  public playlistsSongs: PlaylistsSongs[];\n  isVisible = false;\n\n  constructor(http: HttpClient, public auth: AuthService) {\n    http.get<PlaylistsSongs[]>(this.baseUrl + 'api/playlistswithsongs').subscribe(result => {\n      this.playlistsSongs = result;\n    }, error => console.error(error));\n  }\n\n\n  ngOnInit(): void {\n  }\n\n}\ninterface PlaylistsSongs {\n  id: number;\n  name: string;\n  songs: string[];\n}\n\n","<div *ngIf=\"(auth.isAuthenticated$ | async)===true\">\n  <button type=\"button\" class=\"btn btn-dark\" routerLink=\"/addPlaylist\">Add playlist</button>\n  <br/>\n  <div class=\"card\" style=\"width: 18rem;\" *ngFor=\"let playlist of playlistsSongs\">\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">{{playlist.name}}</h5>\n      <p></p>\n      <a routerLink=\"/playlists/{{playlist.id}}\" class=\"btn btn-primary\">{{playlist.name}}'s Page</a>\n    </div>\n  </div>\n</div>\n\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '@auth0/auth0-angular';\n\n@Component({\n  selector: 'app-login-button',\n  templateUrl: './login-button.component.html',\n  styleUrls: ['./login-button.component.css']\n})\nexport class LoginButtonComponent implements OnInit {\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit(): void {\n  }\nloginWithRedirect(): void{\n    this.auth.loginWithRedirect();\n}\n\n}\n","<div class=\"text-center\">\n<button type=\"button\" class=\"btn btn-primary\" (click)=\"loginWithRedirect()\">\n  Login\n</button>\n<p>\nYou need to login in order to view the content of this website\n</p>\n</div>\n","\n\nimport { domain, clientId} from '../../auth_config.json';\n\nexport const environment = {\n  production: false,\n  auth: {\n    domain,\n    clientId,\n    redirectUri: window.location.origin,\n  }\n};\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {ActivatedRoute} from '@angular/router';\n\n\n@Component({\n  selector: 'app-add-artist-page',\n  templateUrl: './add-artist-page.component.html',\n  styleUrls: ['./add-artist-page.component.css']\n})\nexport class AddArtistPageComponent implements OnInit {\n  baseUrl = 'https://spa586db.azurewebsites.net/';\n  createArtistForm;\n  httpG: HttpClient;\n  router: Router;\n  rootUrl: string;\n  artist: Artist;\n\n  constructor(private formBuilder: FormBuilder, http: HttpClient, router: Router, root: ActivatedRoute ) {\n    this.createArtistForm  = this.formBuilder.group({\n      FirstName: null,\n      LastName: ''\n    });\n    this.httpG = http;\n    this.router = router;\n    this.rootUrl = root.root.toString();\n  }\n\n  ngOnInit(): any {\n  }\n  onSubmit(Data: Artist): void  {\n    if (Data.FirstName == null || Data.FirstName.trim() === '')\n    {\n      alert('First name must be filled');\n    }\n    else {\n      this.createArtistForm.reset();\n      this.httpG.post<Artist>(this.baseUrl + 'api/artists', Data).subscribe(result => {\n        this.artist = result;\n        this.router.navigateByUrl('/artists');\n      }, error => console.error(error));\n    }\n  }\n\n}\n\ninterface Artist {\n  FirstName: string;\n  LastName: string;\n}\n","<form [formGroup]=\"createArtistForm\" (ngSubmit)=\"onSubmit(createArtistForm.value)\">\n  <div>\n    <label for=\"FirstName\">\n      First Name\n    </label>\n    <input id=\"FirstName\" type=\"text\" formControlName=\"FirstName\" required=\"required\">\n  </div>\n  <div>\n    <label for=\"LastName\">\n      Last Name\n    </label>\n    <input id=\"LastName\" type=\"text\" formControlName=\"LastName\">\n  </div>\n  <button class=\"button\" type=\"submit\">Add Artist</button>\n</form>\n","import { Component } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {AuthService} from '@auth0/auth0-angular';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'SpaClient';\n  constructor(public auth: AuthService) { }\n}\n\ninterface ArtistsSongs {\n  name: string;\n  songs: string[];\n}\n","<app-login-button *ngIf=\"(auth.isAuthenticated$ | async)===false\"></app-login-button>\n\n<app-logout-button *ngIf=\"(auth.isAuthenticated$ | async)===true\"></app-logout-button>\n\n<app-navigation *ngIf=\"(auth.isAuthenticated$ | async)===true\"></app-navigation>\n\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AuthModule} from '@auth0/auth0-angular';\nimport {environment as env} from '../environments/environment';\nimport { LoginButtonComponent } from './components/login-button/login-button.component';\nimport { LogoutButtonComponent } from './components/logout-button/logout-button.component';\nimport { ArtistsPageComponent } from './components/artists-page/artists-page.component';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { SingleArtistPageComponent } from './components/single-artist-page/single-artist-page.component';\nimport { PlaylistsPageComponent } from './components/playlists-page/playlists-page.component';\nimport { SinglePlaylistPageComponent } from './components/single-playlist-page/single-playlist-page.component';\nimport { HomePageComponent } from './components/home-page/home-page.component';\nimport { AddArtistPageComponent } from './components/add-artist-page/add-artist-page.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AddSongPageComponent } from './components/add-song-page/add-song-page.component';\nimport { SongsPageComponent } from './components/songs-page/songs-page.component';\nimport { AddPlaylistComponent } from './components/add-playlist/add-playlist.component';\nimport { UpdatePlaylistComponent } from './components/update-playlist/update-playlist.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginButtonComponent,\n    LogoutButtonComponent,\n    ArtistsPageComponent,\n    NavigationComponent,\n    SingleArtistPageComponent,\n    PlaylistsPageComponent,\n    SinglePlaylistPageComponent,\n    HomePageComponent,\n    AddArtistPageComponent,\n    AddSongPageComponent,\n    SongsPageComponent,\n    AddPlaylistComponent,\n    UpdatePlaylistComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AuthModule.forRoot({...env.auth}),\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-add-song-page',\n  templateUrl: './add-song-page.component.html',\n  styleUrls: ['./add-song-page.component.css']\n})\nexport class AddSongPageComponent implements OnInit {\n  baseUrl = 'https://spa586db.azurewebsites.net/';\n  createSongForm;\n  httpG: HttpClient;\n  artists: Artists[];\n  router: Router;\n  song: Song;\n\n  constructor(private formBuilder: FormBuilder, http: HttpClient, router: Router ) {\n    this.createSongForm  = this.formBuilder.group({\n      name: null,\n      artistId: null,\n      yearCreated: null,\n    });\n    http.get<Artists[]>(this.baseUrl + 'api/artists').subscribe(result => {\n      this.artists = result;\n    }, error => console.error(error));\n    this.httpG = http;\n    this.router = router;\n  }\n\n  ngOnInit(): void {\n  }\n  onSubmit(Data: Song): void  {\n    if (Data.name == null || Data.name.trim() === '')\n    {\n      alert('Song name must be filled');\n    }\n    else {\n      Data.artistId = +Data.artistId;\n      this.createSongForm.reset();\n      this.httpG.post<Song>(this.baseUrl + 'api/songs', Data).subscribe(result => {\n        this.song = result;\n        this.router.navigateByUrl('/songs');\n      }, error => console.error(error));\n    }\n  }\n\n}\n\ninterface Song {\n  name: string;\n  artistId: number;\n  yearCreated: number;\n}\n\ninterface Artists {\n  id: number;\n  name: string;\n}\n","<form [formGroup]=\"createSongForm\" (ngSubmit)=\"onSubmit(createSongForm.value)\">\n  <div>\n    <label for=\"name\">\n      Name\n    </label>\n    <input id=\"name\" type=\"text\" formControlName=\"name\" required=\"required\">\n  </div>\n  <div>\n  <label for = \"artistId\">\n    Artist\n  </label>\n  <select id=\"artistId\" formControlName=\"artistId\">\n    <option *ngFor=\"let artist of artists\" value=\"{{artist.id}}\">{{artist.name}}</option>\n  </select>\n  </div>\n  <div>\n    <label for=\"yearCreated\">\n      Year\n    </label>\n    <input id=\"yearCreated\" type=\"number\" formControlName=\"yearCreated\">\n  </div>\n  <button class=\"button\" type=\"submit\">Add Song</button>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css']\n})\nexport class HomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"text-center\">Playlist sharing web-app</h1>\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {AuthService} from '@auth0/auth0-angular';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-single-artist-page',\n  templateUrl: './single-artist-page.component.html',\n  styleUrls: ['./single-artist-page.component.css']\n})\nexport class SingleArtistPageComponent implements OnInit {\n\n  baseUrl = 'https://spa586db.azurewebsites.net/';\n  public artist: Artist;\n  id: number;\n  private sub: any;\n\n  constructor(http: HttpClient, public auth: AuthService, private route: ActivatedRoute) {\n    this.sub = this.route.paramMap.subscribe(params => {\n      this.id = +params.get('id');\n    });\n    http.get<Artist>(this.baseUrl + 'api/artistswithsongs/' + this.id).subscribe(result => {\n      this.artist = result;\n    }, error => console.error(error));\n  }\n\n  ngOnInit(): void {\n\n  }\n\n}\n\n\ninterface Artist {\n  id: number;\n  name: string;\n  songs: string[];\n}\n","<div *ngIf=\"(auth.isAuthenticated$ | async)===true\">\n<table class='table table-striped' aria-labelledby=\"tableLabel\">\n  <thead>\n  <tr>\n    <th>{{ artist.name }}</th>\n  </tr>\n  </thead>\n  <tbody *ngFor=\"let song of artist.songs\">\n  <tr>\n    <td>{{song}}</td>\n  </tr>\n  </tbody>\n</table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthService} from '@auth0/auth0-angular';\n\n@Component({\n  selector: 'app-logout-button',\n  templateUrl: './logout-button.component.html',\n  styleUrls: ['./logout-button.component.css']\n})\nexport class LogoutButtonComponent implements OnInit {\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit(): void {\n  }\nlogout(): void {\n    this.auth.logout({returnTo: window.location.origin });\n}\n}\n","<div class=\"text-center\">\n<button type=\"button\" class=\"btn btn-primary\" (click)=\"logout()\">\n  Logout\n</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\r\n  <ul ngbNav>\r\n    <li ngbNavItem><a ngbNavLink routerLink=\"/\" routerLinkActive=\"active\">Home</a></li>\r\n    <li ngbNavItem><a ngbNavLink routerLink=\"/artists\" routerLinkActive=\"active\">Artists</a></li>\r\n    <li ngbNavItem><a ngbNavLink routerLink=\"/songs\" routerLinkActive=\"active\">Songs</a></li>\r\n    <li ngbNavItem><a ngbNavLink routerLink=\"/playlists\" routerLinkActive=\"active\">Playlists</a></li>\r\n  </ul>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {AuthService} from '@auth0/auth0-angular';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-update-playlist',\n  templateUrl: './update-playlist.component.html',\n  styleUrls: ['./update-playlist.component.css']\n})\nexport class UpdatePlaylistComponent implements OnInit {\n\n\n  baseUrl = 'https://spa586db.azurewebsites.net/';\n  public playlist: Playlist;\n  id: number;\n  private sub: any;\n  public  songs: Song[];\n  addSongsForm;\n  httpG: HttpClient;\n  public songToAdd: Link;\n  router: Router;\n\n  constructor(http: HttpClient, public auth: AuthService, private route: ActivatedRoute, router: Router) {\n    this.sub = this.route.paramMap.subscribe(params => {\n      this.id = +params.get('id');\n      http.get<Playlist>(this.baseUrl + 'api/playlistswithsongs/' + this.id).subscribe(result => {\n        this.playlist = result;\n      }, error => console.error(error));\n    });\n    http.get<Song[]>(this.baseUrl + 'api/songsnotinpl/' + this.id).subscribe(result => {\n      this.songs = result;\n    }, error => console.error(error));\n    this.httpG = http;\n    this.router = router;\n  }\n\n  ngOnInit(): void {\n  }\n  onAdd(Data): void  {\n    this.songToAdd = {\n      playlistID: this.id,\n        songId: Data\n    };\n    this.httpG.post<Link>(this.baseUrl + 'api/playlistsonglists', this.songToAdd).subscribe(\n      () => {\n        this.httpG.get<Song[]>(this.baseUrl + 'api/songsnotinpl/' + this.id).subscribe(result => {\n          this.songs = result;\n        }, error => console.error(error));\n        this.httpG.get<Playlist>(this.baseUrl + 'api/playlistswithsongs/' + this.id).subscribe(result => {\n          this.playlist = result;\n        }, error => console.error(error));\n      });\n}\n  onDelete(Data): void  {\n    this.httpG.delete<Link>(this.baseUrl + 'api/playlistsonglists/' + this.id + '/' + Data).subscribe(\n      () => {\n        this.httpG.get<Song[]>(this.baseUrl + 'api/songsnotinpl/' + this.id).subscribe(result => {\n          this.songs = result;\n        }, error => console.error(error));\n        this.httpG.get<Playlist>(this.baseUrl + 'api/playlistswithsongs/' + this.id).subscribe(result => {\n          this.playlist = result;\n        }, error => console.error(error));\n      });\n  }\n}\n\ninterface Playlist {\n  id: number;\n  name: string;\n  songs: Song[];\n}\n\ninterface Song {\n  id: number;\n  name: string;\n  artist_Name: string;\n  year: number;\n}\ninterface Link {\n  playlistID: number;\n  songId: number;\n}\n","<div>\n  <br/>\n  <table class='table table-striped' aria-labelledby=\"tableLabel\">\n    <thead>\n    <tr>\n      <th>{{ playlist.name }}</th>\n    </tr>\n    </thead>\n    <tbody *ngFor=\"let song of playlist.songs\">\n    <tr>\n      <td>{{song.name}}</td>\n      <td>{{song.artist_Name}}</td>\n      <td>{{song.year}}</td>\n      <td>\n        <button  type=\"button\" class=\"btn btn-dark\" (click)=\"onDelete(song.id)\">Remove from playlist</button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n<br/>\n  <table class='table table-striped' aria-labelledby=\"tableLabel\">\n    <thead>\n    <tr>\n      <th>Song name</th>\n      <th>Artist name</th>\n      <th>Year Created</th>\n    </tr>\n    </thead>\n    <tbody *ngFor=\"let song of songs\">\n    <tr>\n      <td>{{song.name}}</td>\n      <td>{{song.artist_Name}}</td>\n      <td>{{song.year}}</td>\n      <td>\n        <button  type=\"button\" class=\"btn btn-dark\" (click)=\"onAdd(song.id)\">Add to playlist</button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {AuthService} from '@auth0/auth0-angular';\nimport { ActivatedRoute } from '@angular/router';\nimport {FormBuilder} from '@angular/forms';\n\n@Component({\n  selector: 'app-single-playlist-page',\n  templateUrl: './single-playlist-page.component.html',\n  styleUrls: ['./single-playlist-page.component.css']\n})\nexport class SinglePlaylistPageComponent implements OnInit {\n\n  baseUrl = 'https://spa586db.azurewebsites.net/';\n  public playlist: Playlist;\n  id: number;\n  private sub: any;\n\n  constructor(http: HttpClient, public auth: AuthService, private route: ActivatedRoute, private formBuilder: FormBuilder) {\n    this.sub = this.route.paramMap.subscribe(params => {\n      this.id = +params.get('id');\n    });\n    http.get<Playlist>(this.baseUrl + 'api/playlistswithsongs/' + this.id).subscribe(result => {\n      this.playlist = result;\n    }, error => console.error(error));\n  }\n\n  ngOnInit(): void {\n  }\n}\n\ninterface Songs {\n  id: number;\n  name: string;\n  artist_Name: string;\n  year: number;\n}\n\n\ninterface Playlist {\n  id: number;\n  name: string;\n  songs: Songs[];\n}\n","<div *ngIf=\"(auth.isAuthenticated$ | async)===true\">\n  <button type=\"button\" class=\"btn btn-dark\" routerLink=\"/updatePlaylist/{{id}}\">Add Songs</button>\n  <table class='table table-striped' aria-labelledby=\"tableLabel\">\n    <thead>\n    <tr>\n      <th>{{ playlist.name }}</th>\n    </tr>\n    </thead>\n    <tbody *ngFor=\"let song of playlist.songs\">\n    <tr>\n      <td>{{song.name}}</td>\n      <td>{{song.artist_Name}}</td>\n      <td>{{song.year}}</td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport {HttpClient} from '@angular/common/http';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-add-playlist',\n  templateUrl: './add-playlist.component.html',\n  styleUrls: ['./add-playlist.component.css']\n})\nexport class AddPlaylistComponent implements OnInit {\n  baseUrl = 'https://spa586db.azurewebsites.net/';\n  createPlaylistForm;\n  httpG: HttpClient;\n  playlist: Playlist;\n  router: Router;\n\n  constructor(private formBuilder: FormBuilder, http: HttpClient, router: Router ) {\n    this.createPlaylistForm  = this.formBuilder.group({\n      name: null\n    });\n    this.httpG = http;\n    this.router = router;\n  }\n\n  ngOnInit(): void {\n  }\n  onSubmit(Data: Playlist): void  {\n    if (Data.name == null || Data.name.trim() === '')\n    {\n      alert('Playlist name must be filled');\n    }\n    else {\n      this.createPlaylistForm.reset();\n      this.httpG.post<Playlist>(this.baseUrl + 'api/playlists', Data).subscribe(result => {\n        this.playlist = result;\n        this.router.navigateByUrl('/updatePlaylist/' + this.playlist.id);\n      }, error => console.error(error));\n    }\n  }\n\n}\n\ninterface Playlist {\n  id: number;\n  name: string;\n}\n","<form [formGroup]=\"createPlaylistForm\" (ngSubmit)=\"onSubmit(createPlaylistForm.value)\">\n  <div>\n    <label for=\"name\">\n      Name\n    </label>\n    <input id=\"name\" type=\"text\" formControlName=\"name\" required=\"required\">\n  </div>\n  <button class=\"button\" type=\"submit\">Add Playlist</button>\n</form>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AuthGuard} from '@auth0/auth0-angular';\nimport {ArtistsPageComponent} from './components/artists-page/artists-page.component';\nimport {SingleArtistPageComponent} from './components/single-artist-page/single-artist-page.component';\nimport {PlaylistsPageComponent} from './components/playlists-page/playlists-page.component';\nimport {SinglePlaylistPageComponent} from './components/single-playlist-page/single-playlist-page.component';\nimport {HomePageComponent} from './components/home-page/home-page.component';\nimport {AddArtistPageComponent} from './components/add-artist-page/add-artist-page.component';\nimport {AddSongPageComponent} from './components/add-song-page/add-song-page.component';\nimport {SongsPageComponent} from './components/songs-page/songs-page.component';\nimport {AddPlaylistComponent} from './components/add-playlist/add-playlist.component';\nimport {UpdatePlaylistComponent} from './components/update-playlist/update-playlist.component';\n\nconst routes: Routes = [\n  {path: '', component: HomePageComponent},\n  {path: 'artists', component: ArtistsPageComponent, canActivate: [AuthGuard]},\n  {path: 'songs', component: SongsPageComponent, canActivate: [AuthGuard]},\n  {path: 'playlists', component: PlaylistsPageComponent, canActivate: [AuthGuard]},\n  { path: 'artists/:id', component: SingleArtistPageComponent, canActivate: [AuthGuard]},\n  { path: 'playlists/:id', component: SinglePlaylistPageComponent, canActivate: [AuthGuard]},\n  { path: 'addArtist', component: AddArtistPageComponent, canActivate: [AuthGuard]},\n  { path: 'addSong', component: AddSongPageComponent, canActivate: [AuthGuard]},\n  { path: 'addPlaylist', component: AddPlaylistComponent, canActivate: [AuthGuard]},\n  { path: 'updatePlaylist/:id', component: UpdatePlaylistComponent , canActivate: [AuthGuard]}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {AuthService} from '@auth0/auth0-angular';\n\n@Component({\n  selector: 'app-songs-page',\n  templateUrl: './songs-page.component.html',\n  styleUrls: ['./songs-page.component.css']\n})\n\nexport class SongsPageComponent implements OnInit {\n\n  baseUrl = 'https://spa586db.azurewebsites.net/';\n  public songs: Songs[];\n\n  constructor(http: HttpClient, public auth: AuthService) {\n    http.get<Songs[]>(this.baseUrl + 'api/songswithartists').subscribe(result => {\n      this.songs = result;\n    }, error => console.error(error));\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\ninterface Songs {\n  id: number;\n  name: string;\n  artist_Name: string;\n  year: number;\n}\n","<div *ngIf=\"(auth.isAuthenticated$ | async)===true\">\n  <button type=\"button\" class=\"btn btn-dark\" routerLink=\"/addSong\">Add Song</button>\n  <br/>\n  <table class='table table-striped' aria-labelledby=\"tableLabel\">\n    <thead>\n    <tr>\n      <th>Song name</th>\n      <th>Artist name</th>\n      <th>Year Created</th>\n    </tr>\n    </thead>\n    <tbody *ngFor=\"let song of songs\">\n    <tr>\n      <td>{{song.name}}</td>\n      <td>{{song.artist_Name}}</td>\n      <td>{{song.year}}</td>\n    </tr>\n    </tbody>\n  </table>\n\n</div>\n\n\n\n\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}